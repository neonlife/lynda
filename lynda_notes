Lynda Notes

--------------------------------------------------
- Java: Build Automation with Maven --------------
--------------------------------------------------
Project coordinates
- groupId, artifactId, version

mvn archetype:generate -DgroupId=com.lynda -DartifactId=sample -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

java -cp target/sample-1.0-SNAPSHOT.jar com.lynda.App

--------------------------------------------------
- Multi Module Build Automation with Maven -------
--------------------------------------------------
- Inheritance vs Multi-module
- Parent <packaging>pom</packaging
- Child/sub-module <packaging>jar</packaging>

Build lifecycle
- default: validate, compile and test, package and verify, install and deploy
- build profiles: for development, testing, and deployment
    <profiles>
        <profile>
            <id>production</id>
            <plugins><plugin>
            <groupId>some.group</groupId>
            <artifactId>artifact</artifactId>>
            </plugin></plug
        </profile>
    </profiles>
- maven is a plugin execution framework
    - Everything in maven is done using a plugin
    - A plugin is an artifact that has one or more mojos (maven plain old java objects)
    - Mojo is a goal in Maven, e.g. complier:compile plugin is a mojo
    - {plugin-name}-maven-plugin


--------------------------------------------------
- Java SE 8 New Features -------------------------
--------------------------------------------------
Nashorn javascript engine: jjs
 → jjs
jjs> var welcome = "Hello"
jjs> welcome
Hello
jjs> welcome.length
5
jjs> welcome += ", David"
Hello, David
jjs> var input = new java.util.Scanner(new java.net.URL("http://services.explorecalifornia.org/rss/tours.php").openStream())
jjs> input.useDelimiter("$")
java.util.Scanner[delimiters=$][position=0][match valid=false][need input=false][source closed=false][skipped=false][group separator=\,][decimal separator=\.][positive prefix=][negative prefix=\Q-\E][positive suffix=][negative suffix=][NaN string=\Q�\E][infinity string=\Q∞\E]
jjs> var contents = input.next()

New Collection Methods
forEach(), removeIf(), replaceAll(), sort(), forEachRemaining()

Base64 has Encoder, Decoder

Object class has method isNull and nonNull
Lazy messages
Matcher/Pattern class improvements

--------------------------------------------------
- Learning Go ------------------------------------
--------------------------------------------------
gofmt -w badformatfile.go
export GOOS=darwin
go run mycode.go

explicit type: var anInteger int
implicit type: anInteger := 42
explicit const: const anInteger int = 42
implicit const: const anInteger = 42

Arrays Slices Maps Structs
Functions Interfaces Channels
Pointers

new()  -> allocates but does not initialize memory
make() -> allocates and initializes memory (PREFERRED)

No inheritance
Pass by value by default, and functions operating on them will not change original object
If pass by pointer, functions operating on them will change original

defer: used in opening file/database and closing the connection

Concurrency: Goroutine, Channel, Select
Web Frameworks: Beego, Martini, Gorilla, Gocraft, Revel
Database Drivers: database/sql, database/sql/driver